import path from 'path';

import {
  appendFunctionCall,
  TEST_FILE,
  writeImportString,
} from '../test_utils';

const circom_tester = require('circom_tester');
const wasm_tester = circom_tester.wasm;

const IMPORT_STRING = `pragma circom 2.1.7;
include "../../circuit/sisu/gkr/gkr.circom";
`;
const FOLDER_NAME = "gkr";

describe("GKR", function () {
  jest.setTimeout(1000 * 1000);

  beforeEach(async function () {
    writeImportString(FOLDER_NAME, IMPORT_STRING);
  });

  it("VerifyGKRTranscript", async function () {
    appendFunctionCall(FOLDER_NAME, `component main = VerifyGKRTranscript(0);`);
    const circuit = await wasm_tester(
      path.join(__dirname, '.', TEST_FILE)
    );
    let witness = await circuit.calculateWitness({
      "transcript": ["123", "123", "123", "681", "6051722221865786292596826878521844577884572739616215499827568921858178587999", "105", "13413470089044478151235084379453484949111643247345222738629281190930233266906", "14526495004660583363608148244325634717321293892687027104896491917503753816500", "14814460449423536805578811547688321090475958712849863732782971405038359383808", "21846204960222715676255609753177362677417401935173235957370483977374130760342", "14898536272656655897560403531848145912737883643335460505438411823441714854358", "0", "13794622848053636187985896168208629927693023535195935971057262007651730993205", "1089264560760153038789408041371613824154781200930975262038645318077241109426", "18038244307383047301231441247122048703343680718157133824957616500393443854084", "16670973309976933070171903081152344021855076814917812944973812692651403737530", "11101516681653249026988538646411683168212869436836822067344293509769840346317", "17371266749454482578391907928920227668517386452316754555062105978472413023941", "10703936613033955491692120359536754111687078748823979926423464384488714756377", "6337862689576218306554544962268173205764471529257246674594147904179497198394", "4189154834160613327119734541422298835918591495277390254761016658185805434617", "16338228971231044767127091901638392111972250188740650139081682367976044126248", "21608028242762494397163397462727783906167417194006207421915872864781770942974", "16898658229384606417293108466697374476734144601560303982646345011564119231534", "0", "1756302782957723332769192002267190551874512775615722467172774268893734241883", "18204559746750536357578789211206123917488623059511994351819851412946952668103", "0", "18682958329686036748823410170811391211870987124026803069605212156046399212899", "4721346944268604507990123363637103271688868377520230412415668489178518422483", "4253898120675784074850715317214705492277848433624775589410673567746542320485", "17129336367857703324032364386170080241974120179374466659335420299973830143630", "4303954147864959393917863618131568573300601645457390111408132177733401246561", "9467756980773968477360934417257526612125735230250520846728109163217097777898", "11515120150852236084276074476352194370377706514986034362279641085591140950967", "1408149596152432091435785024524339591793957154436228842771591366431832256793", "6083855685382147498223477004902849632047846033811590443044056454256460955594", "20401276366177817992181543727406606566037951546339881004377266101928168397479", "8891359101968944997710141018915284494655266045535554409034310152191527753736", "14483850275531787454601126744192659116403511208956633273984832119031920840019", "13029623811596972595410681741088114368851868999542605154352346526131623392563", "5462772231345327916624858706283757326518727450644976079509421177873396582134", "20288962218811623089921578779662331244790757392792957724030804358186656347989", "3703360001933968894485791294115543559572021105875729615000903998773982375923", "19634315044991104223259957236191360326116437499784196814552499676244105950303", "21748566770175929008691636064235403255763731059948508037118520997925748715473", "16470394284034415124451434548628176473975040449783472296761920965169513476672", "17704766839252040817213929533999873900382663615638288970781241671376904518449", "3295810534596441829665820025657682568639420273233319284896245632024705890578", "887665497990792575366656185599718619526280511544426088020716883174198086590", "547516833023061332221789660963482432254245106375712768800384559318666369140", "17713907302641500023273998701611389270934361374350813032082202836188253303953"],
      "circuit_input": ["3", "2", "3", "1", "2", "0", "0", "0"],
      "fiat_shamir_seed": "3",
      "fiat_shamir_in_r": "0",
      "fiat_shamir_in_round": "0",
    });
    await circuit.assertOut(witness, {});
  });
});
